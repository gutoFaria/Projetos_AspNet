// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ecommerce.Data;

#nullable disable

namespace ecommerce.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    partial class EcommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ecommerce.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTrendingProduct")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Detail = "The Americano coffe is a classic expresso-based drink",
                            ImageUrl = "https://th.bing.com/th/id/OIP.eTEn2xfvC_fL9C2P-ZfKpgHaHa?w=173&h=180&c=7&r=0&o=5&pid=1.7",
                            IsTrendingProduct = true,
                            Name = "Americano",
                            Price = 25m
                        },
                        new
                        {
                            Id = 2,
                            Detail = "The Freeze Coffee ",
                            ImageUrl = "https://th.bing.com/th/id/OIP.Ry5aE9jiYBVZGTJrLNCfbQHaL2?w=115&h=180&c=7&r=0&o=5&pid=1.7",
                            IsTrendingProduct = true,
                            Name = "Freezer Coffee",
                            Price = 25m
                        },
                        new
                        {
                            Id = 3,
                            Detail = "The Express Coffee",
                            ImageUrl = "https://th.bing.com/th/id/OIP.o-eiK1tjgp3ewYlsI78oBwHaHa?w=196&h=196&c=7&r=0&o=5&pid=1.7",
                            IsTrendingProduct = true,
                            Name = "Express Coffe",
                            Price = 25m
                        });
                });

            modelBuilder.Entity("ecommerce.Models.ShopingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ShopingCartItems");
                });

            modelBuilder.Entity("ecommerce.Models.ShopingCartItem", b =>
                {
                    b.HasOne("ecommerce.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using musicmvc.Data;

#nullable disable

namespace musicmvc.Migrations
{
    [DbContext(typeof(MSContext))]
    [Migration("20220112100005_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("musicmvc.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"), 1L, 1);

                    b.Property<string>("AlbumArtUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlbumId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            AlbumArtUrl = "https://open.spotify.com/album/4yP0hdKOZPNshxUOjY0cZj",
                            ArtistId = 1,
                            GenreId = 1,
                            Price = 44.899999999999999,
                            Title = "After Hours"
                        },
                        new
                        {
                            AlbumId = 2,
                            AlbumArtUrl = "https://open.spotify.com/album/21jF5jlMtzo94wbxmJ18aa",
                            ArtistId = 2,
                            GenreId = 2,
                            Price = 44.899999999999999,
                            Title = "30"
                        },
                        new
                        {
                            AlbumId = 3,
                            AlbumArtUrl = "https://open.spotify.com/album/0RzCItg7w7kHuLjDnZBCfB",
                            ArtistId = 3,
                            GenreId = 6,
                            Price = 44.899999999999999,
                            Title = "Tierra"
                        },
                        new
                        {
                            AlbumId = 4,
                            AlbumArtUrl = "https://open.spotify.com/album/7dK54iZuOxXFarGhXwEXfF",
                            ArtistId = 4,
                            GenreId = 2,
                            Price = 44.899999999999999,
                            Title = "Lemonade"
                        },
                        new
                        {
                            AlbumId = 5,
                            AlbumArtUrl = "https://open.spotify.com/album/2FeyIYDDAQqcOJKOKhvHdr",
                            ArtistId = 5,
                            GenreId = 2,
                            Price = 44.899999999999999,
                            Title = "Everyday"
                        });
                });

            modelBuilder.Entity("musicmvc.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"), 1L, 1);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            Nome = "The Weeknd"
                        },
                        new
                        {
                            ArtistId = 2,
                            Nome = "Adele"
                        },
                        new
                        {
                            ArtistId = 3,
                            Nome = "Tierre"
                        },
                        new
                        {
                            ArtistId = 4,
                            Nome = "Beyonce"
                        },
                        new
                        {
                            ArtistId = 5,
                            Nome = "Coldplay"
                        });
                });

            modelBuilder.Entity("musicmvc.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Hip Hop"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Pop"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Rock"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Eletrônica"
                        },
                        new
                        {
                            GenreId = 5,
                            Name = "Blues"
                        },
                        new
                        {
                            GenreId = 6,
                            Name = "Clássico"
                        });
                });

            modelBuilder.Entity("musicmvc.Models.Album", b =>
                {
                    b.HasOne("musicmvc.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("musicmvc.Models.Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("musicmvc.Models.Genre", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
